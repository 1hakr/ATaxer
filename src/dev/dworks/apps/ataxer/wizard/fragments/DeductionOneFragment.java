package dev.dworks.apps.ataxer.wizard.fragments;import static dev.dworks.apps.ataxer.misc.Utils.getFormattedString;import android.app.Activity;import android.os.Bundle;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.TextView;import dev.dworks.apps.ataxer.R;import dev.dworks.apps.ataxer.misc.Utils;import dev.dworks.apps.ataxer.ui.TextCurrency;import dev.dworks.apps.ataxer.wizard.pages.DeductionOnePage;import dev.dworks.betterpickers.numberpicker.NumberPickerBuilder;import dev.dworks.betterpickers.numberpicker.NumberPickerDialogFragment.NumberPickerDialogHandler;import dev.dworks.libs.awizard.model.PageFragmentCallbacks;public class DeductionOneFragment extends Fragment implements NumberPickerDialogHandler, OnClickListener {	private static final String ARG_KEY = "key";	private TextCurrency deduction_entertainment_allowance;	private TextCurrency deduction_tax_on_employment;	private PageFragmentCallbacks mCallbacks;	private String mKey;	private DeductionOnePage mPage;	private NumberPickerBuilder npb;	public static DeductionOneFragment create(String paramString) {		Bundle localBundle = new Bundle();		localBundle.putString("key", paramString);		DeductionOneFragment localDeductionOneFragment = new DeductionOneFragment();		localDeductionOneFragment.setArguments(localBundle);		return localDeductionOneFragment;	}	@Override	public void onCreate(Bundle paramBundle) {		super.onCreate(paramBundle);		mKey = getArguments().getString(ARG_KEY);		mPage = ((DeductionOnePage) mCallbacks.onGetPage(mKey));				npb = new NumberPickerBuilder()		.setFragmentManager(getChildFragmentManager())		.setStyleResId(R.style.BetterPickersDialogFragment_Light)		.setTargetFragment(DeductionOneFragment.this)		.setPlusMinusVisibility(View.INVISIBLE)		.setDecimalVisibility(View.INVISIBLE)		.setLabelText(getString(R.string.rupee));	}	@Override	public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle) {		View localView = paramLayoutInflater.inflate(R.layout.fragment_page_deduction_one, paramViewGroup, false);		((TextView) localView.findViewById(android.R.id.title)).setText(mPage.getTitle());				deduction_tax_on_employment = ((TextCurrency) localView.findViewById(R.id.deduction_tax_on_employment));		deduction_tax_on_employment.setValueText(getFormattedNumber("deduction_tax_on_employment"));		deduction_tax_on_employment.setInfo(getString(R.string.professional_title), getString(R.string.professional_info));				deduction_entertainment_allowance = ((TextCurrency) localView.findViewById(R.id.deduction_entertainment_allowance));		deduction_entertainment_allowance.setValueText(getFormattedNumber("deduction_entertainment_allowance"));		deduction_entertainment_allowance.setInfo(getString(R.string.entertainment_title), getString(R.string.entertainment_info));		return localView;	}		@Override	public void onViewCreated(View paramView, Bundle paramBundle) {		super.onViewCreated(paramView, paramBundle);		deduction_entertainment_allowance.setOnClickListener(this);		deduction_tax_on_employment.setOnClickListener(this);	}	@Override	public void onDetach() {		super.onDetach();		mCallbacks = null;	}	@Override	public void onAttach(Activity paramActivity) {		super.onAttach(paramActivity);		if (!(paramActivity instanceof PageFragmentCallbacks))			throw new ClassCastException("Activity must implement PageFragmentCallbacks");		mCallbacks = ((PageFragmentCallbacks) paramActivity);	}		@Override	public void onDialogNumberSet(int reference, long number, double decimal,			boolean isNegative, double fullNumber) {		switch (reference) { 		case R.id.deduction_entertainment_allowance:			deduction_entertainment_allowance.setValueText(getFormattedString(number));			mPage.getData().putLong(DeductionOnePage.DEDUCTION_ENTERTAINMENT_ALLOWANCE_DATA_KEY,					(number != 0) ? number : 0);			mPage.notifyDataChanged();			break;					case R.id.deduction_tax_on_employment:			deduction_tax_on_employment.setValueText(getFormattedString(number));			mPage.getData().putLong(DeductionOnePage.DEDUCTION_TAX_ON_EMPLOYMENT_DATA_KEY,					(number != 0) ? number : 0);			mPage.notifyDataChanged();			break;		}		mPage.getData().putLong("deduction_one_total", getTotal());		mPage.notifyDataChanged();	}		@Override	public void onClick(View v) {		npb.setReference(v.getId());		switch (v.getId()) {		case R.id.deduction_entertainment_allowance:			npb.setMaxNumber(5000);			npb.setNumber(getNumber(DeductionOnePage.DEDUCTION_ENTERTAINMENT_ALLOWANCE_DATA_KEY)).show();			break;					case R.id.deduction_tax_on_employment:			npb.setMaxNumber(2500);			npb.setNumber(getNumber(DeductionOnePage.DEDUCTION_TAX_ON_EMPLOYMENT_DATA_KEY)).show();			break;		}	}	public String getFormattedNumber(String paramString) {		return Utils.getFormattedString(mPage.getData().getLong(paramString));	}	public String getNumber(String paramString) {		return String.valueOf(mPage.getData().getLong(paramString));	}	public int getTotal() {		int total = 0;        for (String key : mPage.getData().keySet()) {        	if(key == DeductionOnePage.DEDUCTION_ONE_TOTAL){        		continue;        	}        	total += mPage.getData().getLong(key, 0);        }		return total;	}}